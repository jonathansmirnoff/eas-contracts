/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { EAS, EASInterface } from "../../contracts/EAS";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISchemaRegistry",
        name: "registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRevoked",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRevokedOffchain",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyTimestamped",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlineExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAttestation",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAttestations",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExpirationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRegistry",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRevocation",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRevocations",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSchema",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidVerifier",
    type: "error",
  },
  {
    inputs: [],
    name: "Irrevocable",
    type: "error",
  },
  {
    inputs: [],
    name: "NotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSchema",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "schemaUID",
        type: "bytes32",
      },
    ],
    name: "Attested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldNonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNonce",
        type: "uint256",
      },
    ],
    name: "NonceIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "schemaUID",
        type: "bytes32",
      },
    ],
    name: "Revoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "revoker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "RevokedOffchain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "Timestamped",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "expirationTime",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "revocable",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "refUID",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct AttestationRequestData",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct AttestationRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "expirationTime",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "revocable",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "refUID",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct AttestationRequestData",
            name: "data",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature",
            name: "signature",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct DelegatedAttestationRequest",
        name: "delegatedRequest",
        type: "tuple",
      },
    ],
    name: "attestByDelegation",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttestTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
    ],
    name: "getAttestation",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "revoker",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "getRevokeOffchain",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRevokeTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchemaRegistry",
    outputs: [
      {
        internalType: "contract ISchemaRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newNonce",
        type: "uint256",
      },
    ],
    name: "increaseNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
    ],
    name: "isAttestationValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "expirationTime",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "revocable",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "refUID",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct AttestationRequestData[]",
            name: "data",
            type: "tuple[]",
          },
        ],
        internalType: "struct MultiAttestationRequest[]",
        name: "multiRequests",
        type: "tuple[]",
      },
    ],
    name: "multiAttest",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "expirationTime",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "revocable",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "refUID",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct AttestationRequestData[]",
            name: "data",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct MultiDelegatedAttestationRequest[]",
        name: "multiDelegatedRequests",
        type: "tuple[]",
      },
    ],
    name: "multiAttestByDelegation",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "uid",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RevocationRequestData[]",
            name: "data",
            type: "tuple[]",
          },
        ],
        internalType: "struct MultiRevocationRequest[]",
        name: "multiRequests",
        type: "tuple[]",
      },
    ],
    name: "multiRevoke",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "uid",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RevocationRequestData[]",
            name: "data",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "revoker",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct MultiDelegatedRevocationRequest[]",
        name: "multiDelegatedRequests",
        type: "tuple[]",
      },
    ],
    name: "multiRevokeByDelegation",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "data",
        type: "bytes32[]",
      },
    ],
    name: "multiRevokeOffchain",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "data",
        type: "bytes32[]",
      },
    ],
    name: "multiTimestamp",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "uid",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RevocationRequestData",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct RevocationRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "uid",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RevocationRequestData",
            name: "data",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature",
            name: "signature",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "revoker",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct DelegatedRevocationRequest",
        name: "delegatedRequest",
        type: "tuple",
      },
    ],
    name: "revokeByDelegation",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "revokeOffchain",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101e060405234801561001157600080fd5b50604051614e58380380614e58833981016040819052610030916101f3565b60408051808201825260038082526245415360e81b602080840191909152835180850190945260058452640312e332e360dc1b90840152600160805260a052600060c081905290919082908290610088908390610179565b61018052610097816001610179565b6101a0528151602080840191909120610140528151908201206101605246610100526101276101405161016051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60e05250503061012052600261013d83826102c2565b5050506001600160a01b038116610167576040516311a1e69760e01b815260040160405180910390fd5b6001600160a01b03166101c0526103f2565b60006020835110156101955761018e836101ac565b90506101a6565b816101a084826102c2565b5060ff90505b92915050565b600080829050601f815111156101e0578260405163305a27a960e01b81526004016101d79190610380565b60405180910390fd5b80516101eb826103ce565b179392505050565b60006020828403121561020557600080fd5b81516001600160a01b038116811461021c57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061024d57607f821691505b60208210810361026d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102bd57806000526020600020601f840160051c8101602085101561029a5750805b601f840160051c820191505b818110156102ba57600081556001016102a6565b50505b505050565b81516001600160401b038111156102db576102db610223565b6102ef816102e98454610239565b84610273565b6020601f821160018114610323576000831561030b5750848201515b600019600385901b1c1916600184901b1784556102ba565b600084815260208120601f198516915b828110156103535787850151825560209485019460019092019101610333565b50848210156103715786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b818110156103ae5760208186018101516040868401015201610391565b506000604082850101526040601f19601f83011684010191505092915050565b8051602080830151919081101561026d5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516149d261048660003960008181610538015281816115c10152611ef901526000612824015260006127f70152600061293101526000612909015260006128640152600061288e015260006128b801526000610c3401526000610c0b01526000610be201526149d26000f3fe6080604052600436106101965760003560e01c806384b0196e116100e1578063cf190f341161008a578063e71ff36511610064578063e71ff365146104dc578063ed24911d146104fc578063f10b5cc814610511578063f17325e71461056257600080fd5b8063cf190f3414610446578063d45c443514610466578063e30bb5631461049d57600080fd5b8063a6d4dbc7116100bb578063a6d4dbc7146103a6578063b469318d146103b9578063b83010d31461041357600080fd5b806384b0196e1461033e5780639541152514610366578063a3112a641461037957600080fd5b806344adc90e116101435780634d0030701161011d5780634d003070146102e957806354fd4d501461030957806379f7573a1461031e57600080fd5b806344adc90e146102a357806346926267146102c35780634cb7e9e5146102d657600080fd5b806317d7de7c1161017457806317d7de7c1461022b5780632d0335ab1461024d5780633c0427151461029057600080fd5b80630eabf6601461019b57806312b11a17146101b057806313893f61146101f2575b600080fd5b6101ae6101a936600461378d565b610575565b005b3480156101bc57600080fd5b507ffeb2925a02bae3dae48d424a0437a2b6ac939aa9230ddc55a1a76f065d9880765b6040519081526020015b60405180910390f35b3480156101fe57600080fd5b5061021261020d36600461378d565b61070c565b60405167ffffffffffffffff90911681526020016101e9565b34801561023757600080fd5b50610240610751565b6040516101e9919061383d565b34801561025957600080fd5b506101df610268366004613889565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6101df61029e3660046138a6565b6107e3565b6102b66102b136600461378d565b6108e6565b6040516101e991906138e1565b6101ae6102d1366004613924565b610a67565b6101ae6102e436600461378d565b610aeb565b3480156102f557600080fd5b5061021261030436600461393f565b610bce565b34801561031557600080fd5b50610240610bdb565b34801561032a57600080fd5b506101ae61033936600461393f565b610c7e565b34801561034a57600080fd5b50610353610d17565b6040516101e99796959493929190613994565b6102b661037436600461378d565b610d79565b34801561038557600080fd5b5061039961039436600461393f565b610fec565b6040516101e99190613b16565b6101ae6103b4366004613b29565b6111ae565b3480156103c557600080fd5b506102126103d4366004613b3d565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600660209081526040808320938352929052205467ffffffffffffffff1690565b34801561041f57600080fd5b507fb5d556f07587ec0f08cf386545cc4362c702a001650c2058002615ee5c9d1e756101df565b34801561045257600080fd5b5061021261046136600461393f565b611253565b34801561047257600080fd5b5061021261048136600461393f565b60009081526005602052604090205467ffffffffffffffff1690565b3480156104a957600080fd5b506104cc6104b836600461393f565b600090815260046020526040902054151590565b60405190151581526020016101e9565b3480156104e857600080fd5b506102126104f736600461378d565b611261565b34801561050857600080fd5b506101df611299565b34801561051d57600080fd5b5060405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101e9565b6101df610570366004613b69565b6112a8565b348160005b81811015610705577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201811460008686848181106105bb576105bb613ba4565b90506020028101906105cd9190613bd3565b6105d690613e69565b60208101518051919250908015806105f357508260400151518114155b1561062a576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b818110156106ce576106c66040518060a001604052808660000151815260200185848151811061065f5761065f613ba4565b602002602001015181526020018660400151848151811061068257610682613ba4565b60200260200101518152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152602001866080015167ffffffffffffffff16815250611366565b60010161062d565b506106e483600001518385606001518a88611578565b6106ee9088613f99565b9650505050506106fe8160010190565b905061057a565b5050505050565b60004282825b818110156107455761073d3387878481811061073057610730613ba4565b9050602002013585611bc9565b600101610712565b50909150505b92915050565b60606002805461076090613fac565b80601f016020809104026020016040519081016040528092919081815260200182805461078c90613fac565b80156107d95780601f106107ae576101008083540402835291602001916107d9565b820191906000526020600020905b8154815290600101906020018083116107bc57829003601f168201915b5050505050905090565b60006107f66107f183614126565b611cc8565b604080516001808252818301909252600091816020015b6040805160c081018252600080825260208083018290529282018190526060808301829052608083015260a082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161080d57905050905061087b60208401846141a1565b610884906141d5565b8160008151811061089757610897613ba4565b60209081029190910101526108c08335826108b860c0870160a08801613889565b346001611e53565b602001516000815181106108d6576108d6613ba4565b6020026020010151915050919050565b60608160008167ffffffffffffffff81111561090457610904613c11565b60405190808252806020026020018201604052801561093757816020015b60608152602001906001900390816109225790505b509050600034815b84811015610a51577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff850181143689898481811061097f5761097f613ba4565b905060200281019061099191906141e1565b90506109a06020820182614215565b90506000036109db576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a0082356109ef6020850185614215565b6109f89161427d565b338887611e53565b8051909150610a0f9086613f99565b94508060200151878581518110610a2857610a28613ba4565b602002602001018190525080602001515186019550505050610a4a8160010190565b905061093f565b50610a5c8383612586565b979650505050505050565b604080516001808252818301909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610a7e579050509050610ab9368390038301602084016142e3565b81600081518110610acc57610acc613ba4565b6020908102919091010152610ae682358233346001611578565b505050565b348160005b81811015610705577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201811436868684818110610b3057610b30613ba4565b9050602002810190610b4291906141e1565b9050610baf8135610b5660208401846142ff565b808060200260200160405190810160405280939291908181526020016000905b82821015610ba257610b93604083028601368190038101906142e3565b81526020019060010190610b76565b5050505050338886611578565b610bb99086613f99565b94505050610bc78160010190565b9050610af0565b60004261074b8382612670565b6060610c067f0000000000000000000000000000000000000000000000000000000000000000612732565b610c2f7f0000000000000000000000000000000000000000000000000000000000000000612732565b610c587f0000000000000000000000000000000000000000000000000000000000000000612732565b604051602001610c6a93929190614367565b604051602081830303815290604052905090565b33600090815260036020526040902054808211610cc7576040517f756688fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602090815260409182902084905581518381529081018490527f57b09af877df9068fd60a69d7b21f5576b8b38955812d6ae4ac52942f1e38fb7910160405180910390a15050565b600060608060008060006060610d2b6127f0565b610d3361281d565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60608160008167ffffffffffffffff811115610d9757610d97613c11565b604051908082528060200260200182016040528015610dca57816020015b6060815260200190600190039081610db55790505b509050600034815b84811015610a51577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8501811436898984818110610e1257610e12613ba4565b9050602002810190610e249190613bd3565b9050366000610e366020840184614215565b909250905080801580610e575750610e5160408501856143fe565b90508114155b15610e8e576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610f6f57610f676040518060a0016040528087600001358152602001868685818110610ec357610ec3613ba4565b9050602002810190610ed591906141a1565b610ede906141d5565b8152602001610ef060408901896143fe565b85818110610f0057610f00613ba4565b905060600201803603810190610f169190614465565b8152602001610f2b6080890160608a01613889565b73ffffffffffffffffffffffffffffffffffffffff168152602001610f5660a0890160808a01614481565b67ffffffffffffffff169052611cc8565b600101610e91565b506000610f988535610f81858761427d565b610f916080890160608a01613889565b8b8a611e53565b8051909150610fa79089613f99565b975080602001518a8881518110610fc057610fc0613ba4565b602002602001018190525080602001515189019850505050505050610fe58160010190565b9050610dd2565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820183905261010082019290925261012081019190915260008281526004602081815260409283902083516101408101855281548152600182015492810192909252600281015467ffffffffffffffff808216958401959095526801000000000000000081048516606084015270010000000000000000000000000000000090049093166080820152600383015460a08201529082015473ffffffffffffffffffffffffffffffffffffffff90811660c0830152600583015490811660e083015274010000000000000000000000000000000000000000900460ff1615156101008201526006820180549192916101208401919061112590613fac565b80601f016020809104026020016040519081016040528092919081815260200182805461115190613fac565b801561119e5780601f106111735761010080835404028352916020019161119e565b820191906000526020600020905b81548152906001019060200180831161118157829003601f168201915b5050505050815250509050919050565b6111c56111c03683900383018361449c565b611366565b604080516001808252818301909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816111dc579050509050611217368390038301602084016142e3565b8160008151811061122a5761122a613ba4565b6020908102919091010152610ae682358261124b60e0860160c08701613889565b346001611578565b60004261074b338483611bc9565b60004282825b818110156107455761129186868381811061128457611284613ba4565b9050602002013584612670565b600101611267565b60006112a361284a565b905090565b604080516001808252818301909252600091829190816020015b6040805160c081018252600080825260208083018290529282018190526060808301829052608083015260a082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816112c257905050905061133060208401846141a1565b611339906141d5565b8160008151811061134c5761134c613ba4565b60209081029190910101526108c083358233346001611e53565b608081015167ffffffffffffffff161580159061139a57504267ffffffffffffffff16816080015167ffffffffffffffff16105b156113d1576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808201516040808401516060850151855184518587015173ffffffffffffffffffffffffffffffffffffffff84166000908152600390985294872080549697949694956114c6957fb5d556f07587ec0f08cf386545cc4362c702a001650c2058002615ee5c9d1e7595949392886114498361450c565b909155506080808c015160408051602081019990995273ffffffffffffffffffffffffffffffffffffffff9097169688019690965260608701949094529285019190915260a084015260c083015267ffffffffffffffff1660e0820152610100015b60405160208183030381529060405280519060200120612982565b905061153c84606001518284602001518560400151866000015160405160200161152893929190928352602083019190915260f81b7fff0000000000000000000000000000000000000000000000000000000000000016604082015260410190565b6040516020818303038152906040526129ca565b611572576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6040517fa2ea7c6e00000000000000000000000000000000000000000000000000000000815260048101869052600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a2ea7c6e90602401600060405180830381865afa158015611608573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261164e9190810190614544565b8051909150611689576040517fbf37b20e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b855160008167ffffffffffffffff8111156116a6576116a6613c11565b60405190808252806020026020018201604052801561174557816020015b60408051610140810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e0830182905261010083019190915261012082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816116c45790505b50905060008267ffffffffffffffff81111561176357611763613c11565b60405190808252806020026020018201604052801561178c578160200160208202803683370190505b50905060005b83811015611bab5760008a82815181106117ae576117ae613ba4565b6020908102919091018101518051600090815260049092526040909120805491925090611807576040517fc5723b5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c816001015414611844576040517fbf37b20e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600581015473ffffffffffffffffffffffffffffffffffffffff8c811691161461189a576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600581015474010000000000000000000000000000000000000000900460ff166118f0576040517f157bd4c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002810154700100000000000000000000000000000000900467ffffffffffffffff161561194a576040517f905e710700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b426002820180547fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff811670010000000000000000000000000000000067ffffffffffffffff948516810291821793849055604080516101408101825287548152600188015460208201529386169286169290921791830191909152680100000000000000008304841660608301529091049091166080820152600382015460a0820152600482015473ffffffffffffffffffffffffffffffffffffffff90811660c0830152600583015490811660e083015274010000000000000000000000000000000000000000900460ff1615156101008201526006820180548391610120840191611a5690613fac565b80601f0160208091040260200160405190810160405280929190818152602001828054611a8290613fac565b8015611acf5780601f10611aa457610100808354040283529160200191611acf565b820191906000526020600020905b815481529060010190602001808311611ab257829003601f168201915b505050505081525050858481518110611aea57611aea613ba4565b60200260200101819052508160200151848481518110611b0c57611b0c613ba4565b6020026020010181815250508c8b73ffffffffffffffffffffffffffffffffffffffff16868581518110611b4257611b42613ba4565b602002602001015160c0015173ffffffffffffffffffffffffffffffffffffffff167ff930a6e2523c9cc298691873087a740550b8fc85a0680830414c148ed927f6158560000151604051611b9991815260200190565b60405180910390a45050600101611792565b50611bbb84838360018b8b612a46565b9a9950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600660209081526040808320858452918290529091205467ffffffffffffffff1615611c3d576040517fec9d6eeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008381526020829052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff861690811790915590519091859173ffffffffffffffffffffffffffffffffffffffff8816917f92a1f7a41a7c585a8b09e25b195e225b1d43248daca46b0faf9e0792777a222991a450505050565b608081015167ffffffffffffffff1615801590611cfc57504267ffffffffffffffff16816080015167ffffffffffffffff16105b15611d33576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808201516040808401516060808601518651855186880151868801519488015160808901518051908b012060a08a015173ffffffffffffffffffffffffffffffffffffffff871660009081526003909c52988b2080549a9b989a98996114c6997ffeb2925a02bae3dae48d424a0437a2b6ac939aa9230ddc55a1a76f065d988076999493928c611dc48361450c565b919050558e608001516040516020016114ab9b9a999897969594939291909a8b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c015260408b019890985295909716606089015267ffffffffffffffff938416608089015291151560a088015260c087015260e0860152610100850193909352610120840152166101408201526101600190565b60408051808201909152600081526060602082015284516040805180820190915260008152606060208201528167ffffffffffffffff811115611e9857611e98613c11565b604051908082528060200260200182016040528015611ec1578160200160208202803683370190505b5060208201526040517fa2ea7c6e000000000000000000000000000000000000000000000000000000008152600481018990526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a2ea7c6e90602401600060405180830381865afa158015611f55573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611f9b9190810190614544565b8051909150611fd6576040517fbf37b20e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008367ffffffffffffffff811115611ff157611ff1613c11565b60405190808252806020026020018201604052801561209057816020015b60408051610140810182526000808252602080830182905292820181905260608083018290526080830182905260a0830182905260c0830182905260e0830182905261010083019190915261012082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161200f5790505b50905060008467ffffffffffffffff8111156120ae576120ae613c11565b6040519080825280602002602001820160405280156120d7578160200160208202803683370190505b50905060005b858110156125655760008b82815181106120f9576120f9613ba4565b60200260200101519050600067ffffffffffffffff16816020015167ffffffffffffffff161415801561214457504267ffffffffffffffff16816020015167ffffffffffffffff1611155b1561217b576040517f08e8b93700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846040015115801561218e575080604001515b156121c5576040517f157bd4c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518061014001604052806000801b81526020018f81526020016121e94290565b67ffffffffffffffff168152602001836020015167ffffffffffffffff168152602001600067ffffffffffffffff16815260200183606001518152602001836000015173ffffffffffffffffffffffffffffffffffffffff1681526020018d73ffffffffffffffffffffffffffffffffffffffff16815260200183604001511515815260200183608001518152509050600080600090505b61228b8382612e35565b600081815260046020526040902054909250156122aa57600101612281565b81835260008281526004602081815260409283902086518155908601516001820155918501516002830180546060880151608089015167ffffffffffffffff908116700100000000000000000000000000000000027fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff92821668010000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009094169190951617919091171691909117905560a0850151600383015560c0850151908201805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617905560e0850151600583018054610100880151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff000000000000000000000000000000000000000000909116929093169190911791909117905561012084015184919060068201906124299082614669565b505050606084015115612480576060840151600090815260046020526040902054612480576040517fc5723b5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8287868151811061249357612493613ba4565b60200260200101819052508360a001518686815181106124b5576124b5613ba4565b60200260200101818152505081896020015186815181106124d8576124d8613ba4565b6020026020010181815250508f8e73ffffffffffffffffffffffffffffffffffffffff16856000015173ffffffffffffffffffffffffffffffffffffffff167f8bf46bf4cfd674fa735a3d63ec1c9ad4153f033c290341f3a588b75685141b358560405161254891815260200190565b60405180910390a45050505061255e8160010190565b90506120dd565b5061257583838360008c8c612a46565b845250919998505050505050505050565b606060008267ffffffffffffffff8111156125a3576125a3613c11565b6040519080825280602002602001820160405280156125cc578160200160208202803683370190505b508451909150600090815b818110156126655760008782815181106125f3576125f3613ba4565b6020026020010151905060008151905060005b818110156126515782818151811061262057612620613ba4565b602002602001015187878151811061263a5761263a613ba4565b602090810291909101015260019586019501612606565b50505061265e8160010190565b90506125d7565b509195945050505050565b60008281526005602052604090205467ffffffffffffffff16156126c0576040517f2e26794600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff85169081179091559051909184917f5aafceeb1c7ad58e4a84898bdee37c02c0fc46e7d24e6b60e8209449f183459f9190a35050565b6060600061273f83612e94565b600101905060008167ffffffffffffffff81111561275f5761275f613c11565b6040519080825280601f01601f191660200182016040528015612789576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461279357509392505050565b60606112a37f00000000000000000000000000000000000000000000000000000000000000006000612f76565b60606112a37f00000000000000000000000000000000000000000000000000000000000000006001612f76565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156128b057507f000000000000000000000000000000000000000000000000000000000000000046145b156128da57507f000000000000000000000000000000000000000000000000000000000000000090565b6112a3604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600061074b61298f61284a565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b60008060006129d98585613021565b50909250905060008160038111156129f3576129f3614782565b148015612a2b57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80612a3c5750612a3c86868661306e565b9695505050505050565b84516000906001819003612a9e57612a968888600081518110612a6b57612a6b613ba4565b602002602001015188600081518110612a8657612a86613ba4565b60200260200101518888886131bb565b915050612a3c565b602088015173ffffffffffffffffffffffffffffffffffffffff8116612b3f5760005b82811015612b2457878181518110612adb57612adb613ba4565b6020026020010151600014612b1c576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101612ac1565b508315612b3457612b34856134da565b600092505050612a3c565b6000808273ffffffffffffffffffffffffffffffffffffffff1663ce46e0466040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bb191906147b1565b905060005b84811015612c6e5760008a8281518110612bd257612bd2613ba4565b6020026020010151905080600003612bea5750612c66565b82612c21576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88811115612c5b576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b978890039792909201915b600101612bb6565b508715612d49576040517f88e5b2d900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906388e5b2d9908490612ccb908e908e906004016147ce565b60206040518083038185885af1158015612ce9573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612d0e91906147b1565b612d44576040517fbf2f3a8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612e18565b6040517f91db0b7e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906391db0b7e908490612d9f908e908e906004016147ce565b60206040518083038185885af1158015612dbd573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612de291906147b1565b612e18576040517fe8bee83900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8515612e2757612e27876134da565b509998505050505050505050565b60208083015160c084015160e0850151604080870151606088015161010089015160a08a01516101208b01519451600099612e7699989796918c9101614864565b60405160208183030381529060405280519060200120905092915050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612edd577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310612f09576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612f2757662386f26fc10000830492506010015b6305f5e1008310612f3f576305f5e100830492506008015b6127108310612f5357612710830492506004015b60648310612f65576064830492506002015b600a831061074b5760010192915050565b606060ff8314612f9057612f89836134ed565b905061074b565b818054612f9c90613fac565b80601f0160208091040260200160405190810160405280929190818152602001828054612fc890613fac565b80156130155780601f10612fea57610100808354040283529160200191613015565b820191906000526020600020905b815481529060010190602001808311612ff857829003601f168201915b5050505050905061074b565b6000806000835160410361305b5760208401516040850151606086015160001a61304d8882858561352c565b955095509550505050613067565b50508151600091506002905b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff16858560405160240161309d929190614981565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f1626ba7e000000000000000000000000000000000000000000000000000000001790525161311e919061499a565b600060405180830381855afa9150503d8060008114613159576040519150601f19603f3d011682016040523d82523d6000602084013e61315e565b606091505b509150915081801561317257506020815110155b8015612a3c575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906131b090830160209081019084016149ac565b149695505050505050565b602086015160009073ffffffffffffffffffffffffffffffffffffffff811661322f578515613216576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b821561322557613225846134da565b6000915050612a3c565b851561331a578073ffffffffffffffffffffffffffffffffffffffff1663ce46e0466040518163ffffffff1660e01b8152600401602060405180830381865afa158015613280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132a491906147b1565b6132da576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83861115613314576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b85840393505b84156133f2576040517fe49617e100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063e49617e1908890613374908b90600401613b16565b60206040518083038185885af1158015613392573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906133b791906147b1565b6133ed576040517fccf3bb2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6134bf565b6040517fe60c350500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063e60c3505908890613446908b90600401613b16565b60206040518083038185885af1158015613464573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061348991906147b1565b6134bf576040517fbd8ba84d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82156134ce576134ce846134da565b50939695505050505050565b80156134ea576134ea3382613626565b50565b606060006134fa83613700565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115613567575060009150600390508261361c565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156135bb573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166136125750600092506001915082905061361c565b9250600091508190505b9450945094915050565b80471015613666576040517fcd78605900000000000000000000000000000000000000000000000000000000815230600482015260240160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146136c0576040519150601f19603f3d011682016040523d82523d6000602084013e6136c5565b606091505b5050905080610ae6576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060ff8216601f81111561074b576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083601f84011261375357600080fd5b50813567ffffffffffffffff81111561376b57600080fd5b6020830191508360208260051b850101111561378657600080fd5b9250929050565b600080602083850312156137a057600080fd5b823567ffffffffffffffff8111156137b757600080fd5b6137c385828601613741565b90969095509350505050565b60005b838110156137ea5781810151838201526020016137d2565b50506000910152565b6000815180845261380b8160208601602086016137cf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061385060208301846137f3565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146134ea57600080fd5b803561388481613857565b919050565b60006020828403121561389b57600080fd5b813561385081613857565b6000602082840312156138b857600080fd5b813567ffffffffffffffff8111156138cf57600080fd5b820160e0818503121561385057600080fd5b602080825282518282018190526000918401906040840190835b818110156139195783518352602093840193909201916001016138fb565b509095945050505050565b6000606082840312801561393757600080fd5b509092915050565b60006020828403121561395157600080fd5b5035919050565b600081518084526020840193506020830160005b8281101561398a57815186526020958601959091019060010161396c565b5093949350505050565b7fff000000000000000000000000000000000000000000000000000000000000008816815260e0602082015260006139cf60e08301896137f3565b82810360408401526139e181896137f3565b905086606084015273ffffffffffffffffffffffffffffffffffffffff861660808401528460a084015282810360c0840152611bbb8185613958565b805182526020810151602083015260006040820151613a48604085018267ffffffffffffffff169052565b506060820151613a64606085018267ffffffffffffffff169052565b506080820151613a80608085018267ffffffffffffffff169052565b5060a082015160a084015260c0820151613ab260c085018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e0820151613ada60e085018273ffffffffffffffffffffffffffffffffffffffff169052565b50610100820151613af061010085018215159052565b50610120820151610140610120850152613b0e6101408501826137f3565b949350505050565b6020815260006138506020830184613a1d565b600061010082840312801561393757600080fd5b60008060408385031215613b5057600080fd5b8235613b5b81613857565b946020939093013593505050565b600060208284031215613b7b57600080fd5b813567ffffffffffffffff811115613b9257600080fd5b82016040818503121561385057600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112613c0757600080fd5b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715613c6357613c63613c11565b60405290565b60405160c0810167ffffffffffffffff81118282101715613c6357613c63613c11565b6040516080810167ffffffffffffffff81118282101715613c6357613c63613c11565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715613cf657613cf6613c11565b604052919050565b600067ffffffffffffffff821115613d1857613d18613c11565b5060051b60200190565b600060408284031215613d3457600080fd5b6040805190810167ffffffffffffffff81118282101715613d5757613d57613c11565b604052823581526020928301359281019290925250919050565b600060608284031215613d8357600080fd5b6040516060810167ffffffffffffffff81118282101715613da657613da6613c11565b604052905080823560ff81168114613dbd57600080fd5b815260208381013590820152604092830135920191909152919050565b600082601f830112613deb57600080fd5b8135613dfe613df982613cfe565b613caf565b80828252602082019150602060608402860101925085831115613e2057600080fd5b602085015b83811015613e4757613e378782613d71565b8352602090920191606001613e25565b5095945050505050565b803567ffffffffffffffff8116811461388457600080fd5b600060a08236031215613e7b57600080fd5b613e83613c40565b82358152602083013567ffffffffffffffff811115613ea157600080fd5b830136601f820112613eb257600080fd5b8035613ec0613df982613cfe565b8082825260208201915060208360061b850101925036831115613ee257600080fd5b6020840193505b82841015613f0e57613efb3685613d22565b8252602082019150604084019350613ee9565b6020850152505050604083013567ffffffffffffffff811115613f3057600080fd5b613f3c36828601613dda565b604083015250613f4e60608401613879565b6060820152613f5f60808401613e51565b608082015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561074b5761074b613f6a565b600181811c90821680613fc057607f821691505b602082108103613ff9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80151581146134ea57600080fd5b600067ffffffffffffffff82111561402757614027613c11565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060c0828403121561406557600080fd5b61406d613c69565b9050813561407a81613857565b815261408860208301613e51565b6020820152604082013561409b81613fff565b604082015260608281013590820152608082013567ffffffffffffffff8111156140c457600080fd5b8201601f810184136140d557600080fd5b80356140e3613df98261400d565b8181528560208385010111156140f857600080fd5b8160208401602083013760009181016020019190915260808301525060a09182013591810191909152919050565b600060e0823603121561413857600080fd5b614140613c40565b82358152602083013567ffffffffffffffff81111561415e57600080fd5b61416a36828601614053565b60208301525061417d3660408501613d71565b604082015260a083013561419081613857565b6060820152613f5f60c08401613e51565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018112613c0757600080fd5b600061074b3683614053565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112613c0757600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261424a57600080fd5b83018035915067ffffffffffffffff82111561426557600080fd5b6020019150600581901b360382131561378657600080fd5b600061428b613df984613cfe565b8381526020810190600585901b8401368111156142a757600080fd5b845b8181101561391957803567ffffffffffffffff8111156142c857600080fd5b6142d436828901614053565b855250602093840193016142a9565b6000604082840312156142f557600080fd5b6138508383613d22565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261433457600080fd5b83018035915067ffffffffffffffff82111561434f57600080fd5b6020019150600681901b360382131561378657600080fd5b600084516143798184602089016137cf565b7f2e0000000000000000000000000000000000000000000000000000000000000090830190815284516143b38160018401602089016137cf565b7f2e000000000000000000000000000000000000000000000000000000000000006001929091019182015283516143f18160028401602088016137cf565b0160020195945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261443357600080fd5b83018035915067ffffffffffffffff82111561444e57600080fd5b602001915060608102360382131561378657600080fd5b60006060828403121561447757600080fd5b6138508383613d71565b60006020828403121561449357600080fd5b61385082613e51565b60006101008284031280156144b057600080fd5b506144b9613c40565b823581526144ca8460208501613d22565b60208201526144dc8460608501613d71565b604082015260c08301356144ef81613857565b606082015261450060e08401613e51565b60808201529392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361453d5761453d613f6a565b5060010190565b60006020828403121561455657600080fd5b815167ffffffffffffffff81111561456d57600080fd5b82016080818503121561457f57600080fd5b614587613c8c565b81518152602082015161459981613857565b602082015260408201516145ac81613fff565b6040820152606082015167ffffffffffffffff8111156145cb57600080fd5b80830192505084601f8301126145e057600080fd5b81516145ee613df98261400d565b81815286602083860101111561460357600080fd5b6146148260208301602087016137cf565b606083015250949350505050565b601f821115610ae657806000526020600020601f840160051c810160208510156146495750805b601f840160051c820191505b818110156107055760008155600101614655565b815167ffffffffffffffff81111561468357614683613c11565b614697816146918454613fac565b84614622565b6020601f8211600181146146e957600083156146b35750848201515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600385901b1c1916600184901b178455610705565b6000848152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08516915b828110156147375787850151825560209485019460019092019101614717565b508482101561477357868401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b60f8161c191681555b50505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082840312156147c357600080fd5b815161385081613fff565b6000604082016040835280855180835260608501915060608160051b86010192506020870160005b82811015614845577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0878603018452614830858351613a1d565b945060209384019391909101906001016147f6565b50505050828103602084015261485b8185613958565b95945050505050565b8981527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008960601b1660208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008860601b1660348201527fffffffffffffffff0000000000000000000000000000000000000000000000008760c01b1660488201527fffffffffffffffff0000000000000000000000000000000000000000000000008660c01b16605082015284151560f81b60588201528360598201526000607982016000855161493c818460208a016137cf565b8201905061496e818660e01b7fffffffff00000000000000000000000000000000000000000000000000000000169052565b6004019c9b505050505050505050505050565b828152604060208201526000613b0e60408301846137f3565b60008251613c078184602087016137cf565b6000602082840312156149be57600080fd5b505191905056fea164736f6c634300081a000a";

type EASConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EASConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EAS__factory extends ContractFactory {
  constructor(...args: EASConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(registry, overrides || {});
  }
  override deploy(
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(registry, overrides || {}) as Promise<
      EAS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EAS__factory {
    return super.connect(runner) as EAS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EASInterface {
    return new Interface(_abi) as EASInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EAS {
    return new Contract(address, _abi, runner) as unknown as EAS;
  }
}
